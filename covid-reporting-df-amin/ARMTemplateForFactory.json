{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "covid-reporting-df-amin"
		},
		"ls_covid_databricks_clustier_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'ls_covid_databricks_clustier'"
		},
		"ls_parameterset_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_parameterset'"
		},
		"ls_tgt_datalake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_tgt_datalake'"
		},
		"ls_SqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_SqlServer'"
		},
		"ls_src_https_data_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://github.com/Amin-Siddique/AzureDataFactory/blob/main/Dataset/"
		},
		"ls_tgt_datalake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://covidreportingdlake19.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_df_hospital_admission_report')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow for hospital admission report",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_daily_weekly_hospital_report",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourcecdchospitaldata": {},
									"sourceLookupDataDim": {},
									"SourceLookupCCode": {},
									"sinkhospitaladmissionweeklys": {},
									"sinkhospitaladmissiondaily": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_daily_weekly_hospital_report')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_df_process_cases_death')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_process_cases_death",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_process_cases_death",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourcecasesanddeathdata": {},
									"sourceLookupData": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_process_cases_death')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_copy_paramset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_parameterset",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "parameter_list.json",
						"container": "parameters"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"sourceRelativeURL": {
							"type": "string"
						},
						"sinkFileName": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_parameterset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_date_dim_lookup')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_tgt_datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dim_date.csv",
						"fileSystem": "lookup"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date_key",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "day",
						"type": "String"
					},
					{
						"name": "day_name",
						"type": "String"
					},
					{
						"name": "day_of_year",
						"type": "String"
					},
					{
						"name": "week_of_month",
						"type": "String"
					},
					{
						"name": "week_of_year",
						"type": "String"
					},
					{
						"name": "month_name",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "year_week",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_tgt_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_dl_cases_deaths_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_tgt_datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "cases_deaths.csv",
						"folderPath": "ecdc",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code",
						"type": "String"
					},
					{
						"name": "continent",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					},
					{
						"name": "indicator",
						"type": "String"
					},
					{
						"name": "daily_count",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "rate_14_day",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_tgt_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_lookup_country_code')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_tgt_datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "lookup"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code_2_digit",
						"type": "String"
					},
					{
						"name": "country_code_3_digit",
						"type": "String"
					},
					{
						"name": "continent",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_tgt_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_processed_hospital_admission_daily')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_tgt_datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/daily",
						"fileSystem": "processed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code",
						"type": "String"
					},
					{
						"name": "country_code_2_digit",
						"type": "String"
					},
					{
						"name": "country_code_3_digit",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					},
					{
						"name": "daily_count",
						"type": "String"
					},
					{
						"name": "rate_14_day",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_tgt_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_processed_hospital_admission_weekly')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_tgt_datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/weekly",
						"fileSystem": "processed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code",
						"type": "String"
					},
					{
						"name": "country_code_2_digit",
						"type": "String"
					},
					{
						"name": "country_code_3_digit",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					},
					{
						"name": "daily_count",
						"type": "String"
					},
					{
						"name": "rate_14_day",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_tgt_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_raw_hospital_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_tgt_datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "hospital_admissions.csv",
						"folderPath": "ecdc",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "indicator",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "year_week",
						"type": "String"
					},
					{
						"name": "value",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_tgt_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_tgt_cases_death_processed')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_tgt_datalake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/cases_and_deaths",
						"fileSystem": "processed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_tgt_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_covid_databricks_clustier')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4194632125272419.19.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('ls_covid_databricks_clustier_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "7.3.x-scala2.12",
					"newClusterInitScripts": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_parameterset')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_parameterset_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_src_https_data')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_src_https_data_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_tgt_datalake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_tgt_datalake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_tgt_datalake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_daily_weekly_hospital_report')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_raw_hospital_data",
								"type": "DatasetReference"
							},
							"name": "sourcecdchospitaldata"
						},
						{
							"dataset": {
								"referenceName": "ds_date_dim_lookup",
								"type": "DatasetReference"
							},
							"name": "sourceLookupDataDim"
						},
						{
							"dataset": {
								"referenceName": "ds_lookup_country_code",
								"type": "DatasetReference"
							},
							"name": "SourceLookupCCode"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_processed_hospital_admission_weekly",
								"type": "DatasetReference"
							},
							"name": "sinkhospitaladmissionweeklys"
						},
						{
							"dataset": {
								"referenceName": "ds_processed_hospital_admission_daily",
								"type": "DatasetReference"
							},
							"name": "sinkhospitaladmissiondaily"
						}
					],
					"transformations": [
						{
							"name": "SelectDropAndModify"
						},
						{
							"name": "LookupCC"
						},
						{
							"name": "SelectDropUnusedColsAfterLookup"
						},
						{
							"name": "ConditionalSplitWeeklyFromDaily"
						},
						{
							"name": "DerivedColumnYearWeek"
						},
						{
							"name": "AggregateOnWeekForDate"
						},
						{
							"name": "JoinWeekDate"
						},
						{
							"name": "PivotByIndicator"
						},
						{
							"name": "PivotByIndicatorDaily"
						},
						{
							"name": "SortByDateCountry"
						},
						{
							"name": "SortByDateCountryDaily"
						},
						{
							"name": "SelectColWeekly"
						},
						{
							"name": "SelectModifyCol"
						}
					],
					"script": "source(output(\n\t\tcountry as string,\n\t\tindicator as string,\n\t\tdate as date,\n\t\tyear_week as string,\n\t\tvalue as integer,\n\t\tsource as string,\n\t\turl as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> sourcecdchospitaldata\nsource(output(\n\t\tdate_key as string,\n\t\tdate as date,\n\t\tyear as string,\n\t\tmonth as string,\n\t\tday as string,\n\t\tday_name as string,\n\t\tday_of_year as string,\n\t\tweek_of_month as string,\n\t\tweek_of_year as string,\n\t\tmonth_name as string,\n\t\tyear_month as string,\n\t\tyear_week as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> sourceLookupDataDim\nsource(output(\n\t\tcountry as string,\n\t\tcountry_code_2_digit as string,\n\t\tcountry_code_3_digit as string,\n\t\tcontinent as string,\n\t\tpopulation as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SourceLookupCCode\nsourcecdchospitaldata select(mapColumn(\n\t\tcountry,\n\t\tindicator,\n\t\treported_date = date,\n\t\treported_year_week = year_week,\n\t\tvalue,\n\t\tsource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDropAndModify\nSelectDropAndModify, SourceLookupCCode lookup(SelectDropAndModify@country == SourceLookupCCode@country,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupCC\nLookupCC select(mapColumn(\n\t\tcountry = SelectDropAndModify@country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation,\n\t\treported_date,\n\t\tindicator,\n\t\treported_year_week,\n\t\tvalue,\n\t\tsource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDropUnusedColsAfterLookup\nSelectDropUnusedColsAfterLookup split(indicator == 'Weekly new hospital admissions per 100k'  || indicator == 'Weekly new ICU admissions per 100k',\n\tdisjoint: false) ~> ConditionalSplitWeeklyFromDaily@(Weekly, Daily)\nsourceLookupDataDim derive(ecdc_year_week = year + '-W' + lpad(week_of_year,2,'0')) ~> DerivedColumnYearWeek\nDerivedColumnYearWeek aggregate(groupBy(ecdc_year_week),\n\tweek_start_date = min(date),\n\t\tweek_end_date = max(date)) ~> AggregateOnWeekForDate\nConditionalSplitWeeklyFromDaily@Weekly, AggregateOnWeekForDate join(reported_year_week == ecdc_year_week,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinWeekDate\nJoinWeekDate pivot(groupBy(country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation,\n\t\treported_year_week,\n\t\tweek_start_date,\n\t\tweek_end_date,\n\t\tsource),\n\tpivotBy(indicator, ['Weekly new hospital admissions per 100k', 'Weekly new ICU admissions per 100k']),\n\tcount = sum(value),\n\tcolumnNaming: '$N_$V',\n\tlateral: true) ~> PivotByIndicator\nConditionalSplitWeeklyFromDaily@Daily pivot(groupBy(country,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation,\n\t\treported_date,\n\t\tsource),\n\tpivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy']),\n\tcount = sum(value),\n\tcolumnNaming: '$N_$V',\n\tlateral: true) ~> PivotByIndicatorDaily\nPivotByIndicator sort(desc(reported_year_week, true),\n\tasc(country, true),\n\tpartitionBy('hash', 1)) ~> SortByDateCountry\nPivotByIndicatorDaily sort(desc(reported_date, true),\n\tasc(country, true),\n\tpartitionBy('hash', 1)) ~> SortByDateCountryDaily\nSortByDateCountry select(mapColumn(\n\t\tcountry,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation,\n\t\treported_year_week,\n\t\treported_week_start_date = week_start_date,\n\t\treported_week_end_date = week_end_date,\n\t\tnew_hospital_occupancy_count = {count_Weekly new hospital admissions per 100k},\n\t\tnew_icu_occupancy_count = {count_Weekly new ICU admissions per 100k},\n\t\tsource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColWeekly\nSortByDateCountryDaily select(mapColumn(\n\t\tcountry,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation,\n\t\treported_date,\n\t\t{hospital occupancy_count} = {count_Daily hospital occupancy},\n\t\t{ICU occupancy_count} = {count_Daily ICU occupancy},\n\t\tsource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectModifyCol\nSelectColWeekly sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tcountry as string,\n\t\tcountry_code as string,\n\t\tcountry_code_2_digit as string,\n\t\tcountry_code_3_digit as string,\n\t\tpopulation as string,\n\t\tdaily_count as string,\n\t\trate_14_day as string,\n\t\tsource as string\n\t),\n\tpartitionFileNames:['Weekly_hospital_admission_report'],\n\ttruncate: true,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sinkhospitaladmissionweeklys\nSelectModifyCol sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tcountry as string,\n\t\tcountry_code as string,\n\t\tcountry_code_2_digit as string,\n\t\tcountry_code_3_digit as string,\n\t\tpopulation as string,\n\t\tdaily_count as string,\n\t\trate_14_day as string,\n\t\tsource as string\n\t),\n\tpartitionFileNames:['Daily_hospital_admission_report'],\n\ttruncate: true,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> sinkhospitaladmissiondaily"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_raw_hospital_data')]",
				"[concat(variables('factoryId'), '/datasets/ds_date_dim_lookup')]",
				"[concat(variables('factoryId'), '/datasets/ds_lookup_country_code')]",
				"[concat(variables('factoryId'), '/datasets/ds_processed_hospital_admission_weekly')]",
				"[concat(variables('factoryId'), '/datasets/ds_processed_hospital_admission_daily')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_process_cases_death')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_dl_cases_deaths_src",
								"type": "DatasetReference"
							},
							"name": "sourcecasesanddeathdata"
						},
						{
							"dataset": {
								"referenceName": "ds_lookup_country_code",
								"type": "DatasetReference"
							},
							"name": "sourceLookupData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_tgt_cases_death_processed",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "FilterOnlyEurope"
						},
						{
							"name": "SelectCols1"
						},
						{
							"name": "Pivot1"
						},
						{
							"name": "Lookup1"
						},
						{
							"name": "SelectTrimCols"
						}
					],
					"script": "source(output(\n\t\tcountry as string,\n\t\tcountry_code as string,\n\t\tcontinent as string,\n\t\tpopulation as integer,\n\t\tindicator as string,\n\t\tdaily_count as integer,\n\t\tdate as date,\n\t\trate_14_day as string,\n\t\tsource as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> sourcecasesanddeathdata\nsource(output(\n\t\tcountry as string,\n\t\tcountry_code_2_digit as string,\n\t\tcountry_code_3_digit as string,\n\t\tcontinent as string,\n\t\tpopulation as integer\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> sourceLookupData\nsourcecasesanddeathdata filter(continent == 'Europe' && not(isNull(country_code))) ~> FilterOnlyEurope\nFilterOnlyEurope select(mapColumn(\n\t\tcountry,\n\t\tcountry_code,\n\t\tcontinent,\n\t\tpopulation,\n\t\tindicator,\n\t\tdaily_count,\n\t\treported_date = date,\n\t\trate_14_day,\n\t\tsource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectCols1\nSelectCols1 pivot(groupBy(country,\n\t\tcountry_code,\n\t\tcontinent,\n\t\tpopulation,\n\t\tdaily_count,\n\t\trate_14_day,\n\t\tsource),\n\tpivotBy(indicator),\n\tcount = sum(daily_count),\n\tcolumnNaming: '$N$V',\n\tlateral: true) ~> Pivot1\nPivot1, sourceLookupData lookup(Pivot1@country == sourceLookupData@country,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nLookup1 select(mapColumn(\n\t\tcountry = Pivot1@country,\n\t\tcountry_code,\n\t\tcountry_code_2_digit,\n\t\tcountry_code_3_digit,\n\t\tpopulation = Pivot1@population,\n\t\tdaily_count,\n\t\trate_14_day,\n\t\tsource\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTrimCols\nSelectTrimCols sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\ttruncate: true,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_dl_cases_deaths_src')]",
				"[concat(variables('factoryId'), '/datasets/ds_lookup_country_code')]",
				"[concat(variables('factoryId'), '/datasets/ds_tgt_cases_death_processed')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_scd2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_emp_data_src",
								"type": "DatasetReference"
							},
							"name": "sourceDataFromBlob"
						},
						{
							"dataset": {
								"referenceName": "SqlServerTable",
								"type": "DatasetReference"
							},
							"name": "sourceSQLserver"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SqlServerTable",
								"type": "DatasetReference"
							},
							"name": "sinkInsert"
						},
						{
							"dataset": {
								"referenceName": "SqlServerTable",
								"type": "DatasetReference"
							},
							"name": "sinkUpdate"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumnFlag"
						},
						{
							"name": "SelectChangeCol"
						},
						{
							"name": "LookupFromTgt"
						},
						{
							"name": "FilterExistingData"
						},
						{
							"name": "SelectLoseSourceCols"
						},
						{
							"name": "DerivedColumnSetFlag"
						},
						{
							"name": "AlterRowMarkUpdate"
						}
					],
					"script": "source(output(\n\t\tempid as integer,\n\t\tempname as string,\n\t\tgender as string,\n\t\tcountry as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> sourceDataFromBlob\nsource(output(\n\t\tsk_id as integer,\n\t\tempid as integer,\n\t\tempname as string,\n\t\tgender as string,\n\t\tcountry as string,\n\t\tisactive as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> sourceSQLserver\nsourceDataFromBlob derive(isactive = 1) ~> DerivedColumnFlag\nsourceSQLserver select(mapColumn(\n\t\tSQL_sk_id = sk_id,\n\t\tSQL_empid = empid,\n\t\tSQL_empname = empname,\n\t\tSQL_gender = gender,\n\t\tSQL_country = country,\n\t\tSQL_isactive = isactive\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectChangeCol\nsourceDataFromBlob, SelectChangeCol lookup(empid == SQL_empid,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupFromTgt\nLookupFromTgt filter(not(isNull(SQL_empid))) ~> FilterExistingData\nFilterExistingData select(mapColumn(\n\t\tSQL_sk_id,\n\t\tSQL_empid,\n\t\tSQL_empname,\n\t\tSQL_gender,\n\t\tSQL_country,\n\t\tSQL_isactive\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectLoseSourceCols\nSelectLoseSourceCols derive(SQL_isactive = 0) ~> DerivedColumnSetFlag\nDerivedColumnSetFlag alterRow(updateIf(1==1)) ~> AlterRowMarkUpdate\nDerivedColumnFlag sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsk_id as integer,\n\t\tempid as integer,\n\t\tempname as string,\n\t\tgender as string,\n\t\tcountry as string,\n\t\tisactive as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2) ~> sinkInsert\nAlterRowMarkUpdate sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tsk_id as integer,\n\t\tempid as integer,\n\t\tempname as string,\n\t\tgender as string,\n\t\tcountry as string,\n\t\tisactive as integer\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['sk_id'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\tmapColumn(\n\t\tsk_id = SQL_sk_id,\n\t\tempid = SQL_empid,\n\t\tempname = SQL_empname,\n\t\tgender = SQL_gender,\n\t\tcountry = SQL_country,\n\t\tisactive = SQL_isactive\n\t)) ~> sinkUpdate"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_emp_data_src')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_emp_data_src')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_parameterset",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Employees.csv",
						"container": "scd2"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "empid",
						"type": "String"
					},
					{
						"name": "empname",
						"type": "String"
					},
					{
						"name": "gender",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_parameterset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_SqlServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('ls_SqlServer_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_SqlServer",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "sk_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "empid",
						"type": "int",
						"precision": 10
					},
					{
						"name": "empname",
						"type": "nvarchar"
					},
					{
						"name": "gender",
						"type": "nvarchar"
					},
					{
						"name": "country",
						"type": "nvarchar"
					},
					{
						"name": "isactive",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tbl_employee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_SqlServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_scd2_emp_detail')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow for scd logic two",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_scd2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceDataFromBlob": {},
									"sourceSQLserver": {},
									"sinkInsert": {},
									"sinkUpdate": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_scd2')]"
			]
		}
	]
}